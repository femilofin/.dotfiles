# ==========================
# ===  General settings  ===
# ==========================

# Enable mouse support
setw -g mouse on

# tmux display things in 256 colors
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color-italic"

set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

#  enable terminal compability
set-option -ga terminal-overrides ",tmux-256color-italic:Tc:sitm=\E[3m"

# automatically renumber tmux windows
set -g renumber-windows on

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# synchronize all panes in a window
bind S setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# movement between windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 20
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode 'v' send -X begin-selection
bind -T copy-mode 'y' send -X copy-pipe-and-cancel "pbcopy"

# Buffers to/from Mac clipboard, yay tmux book from pragprog
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# don't show former name when renaming windows
bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"

# same during renaming of session
bind '`' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{}" "rename-window '%%'"'

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach from session
bind d detach

# clear scrollback buffer
bind -n C-k clear-history

# Restoring neovim sessions
set -g @resurrect-strategy-nvim 'session'

# Restoring pane contents
set -g @resurrect-capture-pane-contents 'on'

# Restoring shell history (experimental)
set -g @resurrect-save-shell-history 'on'

# Online status
set -g @plugin 'tmux-plugins/tmux-online-status'
# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity on

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.dotfiles/tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237


##############################
### Color & Style Settings ###
##############################

source ~/.dotfiles/tmux/theme.sh

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm;'
